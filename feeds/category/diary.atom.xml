<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>The Egel's Blog - Diary</title><link href="http://egel.pl/" rel="alternate"></link><link href="http://egel.pl/feeds/category/diary.atom.xml" rel="self"></link><id>http://egel.pl/</id><updated>2016-11-18T00:00:00+01:00</updated><entry><title>Tasting of Arch Linux</title><link href="http://egel.pl/tasting-of-arch-linux.html" rel="alternate"></link><published>2016-11-18T00:00:00+01:00</published><updated>2016-11-18T00:00:00+01:00</updated><author><name>Maciej Sypie≈Ñ</name></author><id>tag:egel.pl,2016-11-18:/tasting-of-arch-linux.html</id><summary type="html">&lt;p&gt;Whole process of installation and my reflections upon the Arch Linux.&lt;/p&gt;</summary><content type="html">&lt;!--
&lt;div class="intro-article-image-sm" markdown="1"&gt;
  ![Linux logo]({filename}/images/archlinux_logo.png)
&lt;/div&gt;
--&gt;

&lt;p&gt;I have to admit that installation of Arch Linux can be difficult for many people, but that exactly is real fun!&lt;/p&gt;
&lt;p&gt;Few days ago I've tried to install Arch on my virtual machine then on my laptop and I could not find anything that I didn't like. Yeah, I agree that there are many decisions you have to decide during installation of Arch. For example: manual setting up of partitions, current date, downloading all related packages, then finally install whole system. For many (unfortunately) it's just the beginning, because after the installation you have a bare system - console and that is it. You need to install and configure GUI and other important stuff on your own, but actually that is real fun!&lt;/p&gt;
&lt;p&gt;The longest part for me was the downloading and installation packages from the Net. This took me around 45 minutes to download the system and GUI interface (gnome).&lt;/p&gt;
&lt;p&gt;Beside the installation process, I love the whole idea of having one release in contrast to Ubuntu. You have only one major version and you stick to it - until that community decide to change it.&lt;/p&gt;
&lt;p&gt;Below I would like to share my whole process and preferences during the setting up the Arch.&lt;/p&gt;
&lt;h3&gt;Partitioning hard drives&lt;/h3&gt;
&lt;p&gt;Display all drives on PC. I have only one drive called &lt;code&gt;/dev/sda&lt;/code&gt;.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fdisk -l
cfdisk /dev/sda
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;I've got 500GB drive (with real space of 465GB), but the drive has one hidden partition for WinRecovery with size around 18GB (I'm not using it right now).&lt;/p&gt;
&lt;p&gt;So, now I split a bit rest of my drive space for 2 additional partitions.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Many IT guys will be whimper a bit of having only one general partition for &lt;code&gt;/&lt;/code&gt;, but I found it more useful for me in daily work.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you have disk bigger then 2TB use &lt;a href="https://en.wikipedia.org/wiki/GUID_Partition_Table"&gt;&lt;code&gt;GPT&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;DOS&lt;/code&gt;, if using of &lt;code&gt;MBR&lt;/code&gt; is not obligatory.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;18GB hidden WinRecovery partition (not used)&lt;/li&gt;
&lt;li&gt;16GB for &lt;code&gt;/swap&lt;/code&gt; with type &lt;code&gt;linux swap&lt;/code&gt; (82)&lt;/li&gt;
&lt;li&gt;~431GB for &lt;code&gt;/&lt;/code&gt; with &lt;strong&gt;bootable&lt;/strong&gt; flag and type &lt;code&gt;linux&lt;/code&gt; (83)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more take a look on &lt;a href="https://wiki.archlinux.org/index.php/partitioning"&gt;partitioning page&lt;/a&gt; on Arch wiki.&lt;/p&gt;
&lt;h3&gt;Downloading basic packages&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;I have tried installation on my virtual box then again on my laptop. The problem that I face to, was internet connection through WiFi. There is several way of doing this. You can use &lt;code&gt;wifi-menu&lt;/code&gt; to setup temporary connection for downloading packages and after installation setup &lt;code&gt;network-manager&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this part we will format our partitions and enable Linux SWAP:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mksf.ext4 /dev/sda2
mount /dev/sda2 /mnt
mkswap /dev/sda1
swapon /dev/sda1
pacstrap /mnt base base-devel &lt;span class="c1"&gt;# most basic packages&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;If you don't want to install anything more for now, you can omit below packages, but I recommend to install them also just for more efficient usage before setting up the &lt;code&gt;network-manager&lt;/code&gt;.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pacstrap /mnt dialog wpa_supplicant network-manager-applet ldns &lt;span class="c1"&gt;# for connecting via wifi-menu after install&lt;/span&gt;
pacstrap /mnt sudo zsh wget curl &lt;span class="c1"&gt;# additional packages&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h3&gt;Configuring the installation&lt;/h3&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;arch-chroot /mnt
passwd root
vi /etc/locale.gen    &lt;span class="c1"&gt;# uncoment all for you lang: en_US&lt;/span&gt;
locale-gen
ln -sf /usr/share/zoneinfo/Europe/Berlin /etc/localtime
timedatectl set-ntp &lt;span class="nb"&gt;true&lt;/span&gt;
hwclock --systohc
&lt;span class="nb"&gt;echo&lt;/span&gt; vbox &amp;gt; /etc/hostname

&lt;span class="c1"&gt;# installing grub&lt;/span&gt;
pacman -S grub-bios
grub-install /dev/sda

&lt;span class="c1"&gt;# generate system info file&lt;/span&gt;
mkinitcpio -p linux

grub-mkconfig -o /boot/grub/grub.cfg
&lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="c1"&gt;# from /mnt root&lt;/span&gt;

&lt;span class="c1"&gt;# generate partition info&lt;/span&gt;
genfstab /mnt &amp;gt;&amp;gt; /mnt/etc/fstab
umount -R /mnt
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;This password is the most important of all. Write it down somewhere to not forget, we will need it later.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Connect to internet&lt;/h3&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ip link
systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; dhcpcd.service
systemctl start dhcpcd.service
ping google.com
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;or copy profile from examples&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cp /etc/netctl/examples/ethernet-dhcp /etc/netctl/
vim /etc/netctl/ethernet-dhcp    &lt;span class="c1"&gt;# change Interface=enp0s3&lt;/span&gt;
netctl &lt;span class="nb"&gt;enable&lt;/span&gt; ethernet-dhcp
netctl start ethernet-dhcp
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;If above not work try manual install upon result from &lt;code&gt;ip link&lt;/code&gt;, in my case the Ethernet device name is called &lt;code&gt;enp0s3&lt;/code&gt;&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ip link
dhcpcd enp0s3
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;/blockquote&gt;
&lt;h3&gt;Create user&lt;/h3&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;useradd -m -g users -G wheel,storage,power,sys,adm -s /bin/zsh maciej
passwd maciej
vim /etc/sudoers    &lt;span class="c1"&gt;# Uncomment: wheel ALL=(ALL) ALL&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;Now SWITCH to new created user!&lt;/strong&gt;
To do it &lt;code&gt;logout&lt;/code&gt; from root user just to safety purpose.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why? Because when you use &lt;strong&gt;root&lt;/strong&gt; you can do everything (it is good when you now what you're doing), but it's not about what you can or can't do, it's about you. You're more secure from yourself actions for example just using &lt;code&gt;sudo&lt;/code&gt; program.&lt;/p&gt;
&lt;p&gt;It's good approach - but hey, you already know this, right? ;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Further steps&lt;/h3&gt;
&lt;p&gt;Now we'll install additional useful stuff. You may or may not to install it, it's up to you.&lt;/p&gt;
&lt;p&gt;My &lt;strong&gt;must have&lt;/strong&gt; list.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pacman -Syu
sudo pacman -S gvim git tmux htop jack2
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For bash I usually install &lt;code&gt;bash-completion&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;For checking hardware &lt;code&gt;lshw hwinfo&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;For mini-jack support &lt;code&gt;jack2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;For supporting different drives I install &lt;code&gt;exfat-utils dosfstools jfsutils ntfs-3g mtools&lt;/code&gt; and for partitioning I like &lt;code&gt;gparted&lt;/code&gt; and &lt;code&gt;gpart&lt;/code&gt; for fixing drives.&lt;/li&gt;
&lt;li&gt;For graphics &lt;code&gt;gimp inkscape&lt;/code&gt; and &lt;code&gt;imagemagick&lt;/code&gt; for console operations.&lt;/li&gt;
&lt;li&gt;For FTP &lt;code&gt;filezilla&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;For SSH &lt;code&gt;openssh&lt;/code&gt; is obvious choice!&lt;/li&gt;
&lt;li&gt;For LaTeX I usually install all packages &lt;code&gt;texlive-most texlive-lang&lt;/code&gt; and &lt;code&gt;texstudio&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Install display manager&lt;/h3&gt;
&lt;p&gt;I choose &lt;a href="https://www.gnome.org/gnome-3/"&gt;Gnome3&lt;/a&gt; for my graphical environment, because now many problems has been fixed by maintainers and it's looks quite nice.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pacman -S gnome gnome-extra gnome-tweek-tool
sudo systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; gdm.service
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Reboot system with &lt;code&gt;sudo reboot&lt;/code&gt; and we're done with installation of GUI.&lt;/p&gt;
&lt;h3&gt;Install the nVidia drivers&lt;/h3&gt;
&lt;p&gt;First we check which graphic card we have:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lspci -k &lt;span class="p"&gt;|&lt;/span&gt; grep -A &lt;span class="m"&gt;2&lt;/span&gt; -E &lt;span class="s2"&gt;&amp;quot;(VGA|3D)&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;In my laptop I've got &lt;strong&gt;GeForce GT 425m&lt;/strong&gt;, so according to &lt;a href=""&gt;Arch Linux wiki about nvidia&lt;/a&gt;. I have to install &lt;code&gt;nvidia nvidia-libgl&lt;/code&gt; and enable service.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It might wants to uninstall &lt;code&gt;mesa-libgl&lt;/code&gt; package (this package have some problems with handling animations for some graphic cards), so agree for that by pressing (Y).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pacman -S nvidia nvidia-utils nvidia-libgl
sudo systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; nvidia-persistenced.service
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Then we have to reboot the system and check &lt;code&gt;lsmod | grep nvidia&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;The end&lt;/h3&gt;
&lt;p&gt;Now you should have full operational Arch Linux system - and yes, you should be proud of yourself!&lt;/p&gt;
&lt;p&gt;Thanks for staying with me to the end. I hope that little tutorial of mine, help you a bit during your journey of setting up you private Arch instance ;)&lt;/p&gt;</content><category term="linux"></category><category term="arch"></category><category term="terminal"></category></entry><entry><title>Being a perpetrator of DOS attack</title><link href="http://egel.pl/being-a-perpetrator-of-dos-attack.html" rel="alternate"></link><published>2016-09-21T00:00:00+02:00</published><updated>2016-09-21T00:00:00+02:00</updated><author><name>Maciej Sypie≈Ñ</name></author><id>tag:egel.pl,2016-09-21:/being-a-perpetrator-of-dos-attack.html</id><summary type="html">&lt;p&gt;Few days ago my tiny VPS server has become an attacker of denial of service. Really?&lt;/p&gt;
&lt;p&gt;I was mailed by automatic DO mailer, that my server have become an attacker of denial of service and everything have been shutdown.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi there,&lt;/p&gt;
&lt;p&gt;We've detected an outgoing Denial of Service attack (http ‚Ä¶&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;Few days ago my tiny VPS server has become an attacker of denial of service. Really?&lt;/p&gt;
&lt;p&gt;I was mailed by automatic DO mailer, that my server have become an attacker of denial of service and everything have been shutdown.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi there,&lt;/p&gt;
&lt;p&gt;We've detected an outgoing Denial of Service attack (http://do.co/21Y1Gc1) originating from your Droplet. Due to the traffic‚Äôs harmful nature, your Droplet was taken offline; this means it is not connected to the internet and all hosted sites and services are unreachable. We know that this action is disruptive, but it‚Äôs necessary to protect you, our network, and the target of your Droplet‚Äôs attack.&lt;/p&gt;
&lt;p&gt;You can access your droplet using this console link: &lt;em&gt;CUT LINK&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Because this means your Droplet has been compromised, you‚Äôll need to back up your data and transfer it to a new Droplet. We have a recovery tool to assist you, but any databases on your Droplet will need to be backed up before we boot your Droplet into the recovery tool because you won‚Äôt be able to make the backups afterwards.&lt;/p&gt;
&lt;p&gt;Specific backup steps vary depending on the database software in use, which is most commonly MySQL. If you‚Äôre not sure how, http://do.co/1h0uWgm will show you how to back up your databases from MySQL.&lt;/p&gt;
&lt;p&gt;Once you have finished backing up your data, the next step is downloading and transferring your data to your new Droplet. Please update this ticket when you‚Äôre ready and we‚Äôll configure this Droplet so you can proceed.&lt;/p&gt;
&lt;p&gt;If you‚Äôve enabled our backup service or have a snapshot of the Droplet, you can restore directly from that image instead of going through the recovery process. Be aware that this will destroy any changes or additions made to the Droplet since the creation date of the image you use to restore from.  If you do this, please update the ticket as we will need to reconfigure networking to get your Droplet back online.&lt;/p&gt;
&lt;p&gt;If you don‚Äôt need the data from this Droplet, you can destroy this Droplet at your convenience.  If you‚Äôd like to keep the current IP address, you will need to use our rebuild function. This acts like a clean install of your OS and is currently the only way to ensure you retain your IP.  As with restoring from an image, please let us know once you‚Äôve done this.&lt;/p&gt;
&lt;p&gt;If you have any further questions, or if we can further assist, please let us know.&lt;/p&gt;
&lt;p&gt;Regards,&lt;/p&gt;
&lt;p&gt;Trust &amp;amp; Safety
DigitalOcean Support&lt;/p&gt;
&lt;p&gt;Please login to view the ticket:
https://%DO I will not sponsor your links here!%/support/tickets&lt;/p&gt;
&lt;p&gt;Thanks so much,
DigitalOcean&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That was very surprising for me, because I only use this VPS displaying my blog and as a web development sandbox (basic stuff like: Apache, Nginx, PostgeSQL, MySQL, ect.). Nothing harmful.&lt;/p&gt;
&lt;p&gt;I lend the cheapest server they've got, 512MB RAM, 1 Core CPU around 2.2GHz with 20GB storage just for having fun with creating something awesome and share it with the community (also with you).&lt;/p&gt;
&lt;p&gt;In the latest time when I use DO VPS I've try to setup private Gitlab on this tiny machine and I was succeeded. I setup Gitlab + Apache + MySQL (and couple of other deamons) and this works flawlessly with additional drive SWAP around 2GB. But after few days my server has been shutdown instantly.&lt;/p&gt;
&lt;p&gt;So when the super scripts of DO discovered, that my little server generate bigger traffic (guessing this), then my server has been cut out from connection to the Internet.&lt;/p&gt;
&lt;p&gt;Even after shutting down my VPS, I was still charged with full amount - it was not much, but hey, I hire this VPS mainly to have a cheap server with connection to the Internet! If I want a simple server with similar amount of RAM, I would buy Raspberry PI and connect only to a power adapter without accessing to Internet.&lt;/p&gt;
&lt;p&gt;I was really angry about this situation, but in the end that's good, that this happen to me - I change VPS provider much quicker then I thought :)&lt;/p&gt;</content><category term="linux"></category><category term="console"></category><category term="server"></category></entry><entry><title>Nginx configuration for AngularJS cloud project with Apiary</title><link href="http://egel.pl/nginx-configuration-for-angularjs-cloud-project-with-apiary.html" rel="alternate"></link><published>2016-04-13T12:44:00+02:00</published><updated>2016-04-13T12:44:00+02:00</updated><author><name>Maciej Sypie≈Ñ</name></author><id>tag:egel.pl,2016-04-13:/nginx-configuration-for-angularjs-cloud-project-with-apiary.html</id><summary type="html">&lt;!--
&lt;div class="intro-article-image-sm" markdown="1"&gt;
  ![Logo of Sublime Text 3]({filename}/images/nginx_logo.png)
&lt;/div&gt;
--&gt;

&lt;p&gt;Recently I have been working on some cloud project with my coworkers. We used
 &lt;a href="https://angularjs.org/"&gt;AngularJS&lt;/a&gt; as frontend framework and &lt;a href="https://apiary.io/"&gt;Apiary&lt;/a&gt; as a backend bridge for RESTful API, while the real backend was being built.&lt;/p&gt;
&lt;p&gt;The main gole for proper nginx configuration was to serve &lt;code&gt;*.example.dev&lt;/code&gt;
domains, but with some ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;!--
&lt;div class="intro-article-image-sm" markdown="1"&gt;
  ![Logo of Sublime Text 3]({filename}/images/nginx_logo.png)
&lt;/div&gt;
--&gt;

&lt;p&gt;Recently I have been working on some cloud project with my coworkers. We used
 &lt;a href="https://angularjs.org/"&gt;AngularJS&lt;/a&gt; as frontend framework and &lt;a href="https://apiary.io/"&gt;Apiary&lt;/a&gt; as a backend bridge for RESTful API, while the real backend was being built.&lt;/p&gt;
&lt;p&gt;The main gole for proper nginx configuration was to serve &lt;code&gt;*.example.dev&lt;/code&gt;
domains, but with some exceptions (restrictions) for subdomains:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;www&lt;/code&gt; subdomain as a legacy restriction&lt;/li&gt;
&lt;li&gt;&lt;code&gt;api&lt;/code&gt; subdomain reserved for final REST API&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tests&lt;/code&gt; this subdomain (for my purpose only) provides easy URL to code coverage with
    unit tests&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;I use &lt;code&gt;dev&lt;/code&gt; domain only for on my local machine only. Feel free to change it
on whatever name you like.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While building frontend application I have made some basic nginx configuration
and it looks like this snippet presented at the bottom.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It might be important for Readers. We have decided to split application for two separate projects, due to AngularJS have problems with support of multiple subdomains. Finally one of our application serve subdomains &lt;code&gt;&amp;lt;variable&amp;gt;.example.dev&lt;/code&gt; and other serve bacis domain &lt;code&gt;example.dev&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This configuration provides 5 servers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First one is for frontend application, which may support organizations with
    some exceptions for &lt;code&gt;api&lt;/code&gt;, &lt;code&gt;tests&lt;/code&gt; and &lt;code&gt;www&lt;/code&gt; (ex.: &lt;code&gt;companyname.example.dev&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Second for legacy domain &lt;code&gt;www&lt;/code&gt; redirect.&lt;/li&gt;
&lt;li&gt;The third is for frontend aplication which may support only basic domain (ex.: &lt;code&gt;example.dev&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Next one is for REST backend domain redirect provided by apiary.&lt;/li&gt;
&lt;li&gt;The Last one provides easy access for auto generated code coverage for
    fronted app.&lt;/li&gt;
&lt;/ul&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;^(?:(?!www)(?!api)(?!tests))(.*)\.example\.dev$;&lt;/span&gt;
  &lt;span class="s"&gt;access_log&lt;/span&gt; &lt;span class="s"&gt;/tmp/subdomains.example.dev.log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;error_log&lt;/span&gt;  &lt;span class="s"&gt;/tmp/subdomains.example.dev.error.log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;client_max_body_size&lt;/span&gt; &lt;span class="s"&gt;100M&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Access-Control-Allow-Origin&amp;#39;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;root&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/ABSOLUTE_PATH_TO_WORKING_DIR/example-subdomain-frontend/build&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="nv"&gt;$uri/&lt;/span&gt; &lt;span class="s"&gt;/index.html&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;www.example.dev&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;301&lt;/span&gt; &lt;span class="nv"&gt;$scheme://exampe.dev$request_uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;example.dev&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;access_log&lt;/span&gt; &lt;span class="s"&gt;/tmp/example.dev.log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;error_log&lt;/span&gt;  &lt;span class="s"&gt;/tmp/example.dev.error.log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;client_max_body_size&lt;/span&gt; &lt;span class="s"&gt;100M&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Access-Control-Allow-Origin&amp;#39;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;root&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/ABSOLUTE_PATH_TO_WORKING_DIR/example-domain-frontend/build&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="nv"&gt;$uri/&lt;/span&gt; &lt;span class="s"&gt;/index.html&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;api.example.dev&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;access_log&lt;/span&gt; &lt;span class="s"&gt;/tmp/api.example.dev.log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;error_log&lt;/span&gt;  &lt;span class="s"&gt;/tmp/api.example.dev.error.log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Access-Control-Allow-Credentials&amp;#39;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Access-Control-Allow-Methods&amp;#39;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;GET,&lt;/span&gt; &lt;span class="s"&gt;POST,&lt;/span&gt; &lt;span class="s"&gt;PUT,&lt;/span&gt; &lt;span class="s"&gt;DELETE,&lt;/span&gt; &lt;span class="s"&gt;OPTIONS&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Access-Control-Allow-Headers&amp;#39;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;proxy_pass&lt;/span&gt; &lt;span class="s"&gt;http://private-ABCDE-example.apiary-mock.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;tests.example.dev&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;client_max_body_size&lt;/span&gt; &lt;span class="s"&gt;100M&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;root&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/ABSOLUTE_PATH_TO_WORKING_DIR/example-subdomain-frontend/tests/test-coverage/PhantomJS&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="s"&gt;.1.1&lt;/span&gt; &lt;span class="s"&gt;(Mac&lt;/span&gt; &lt;span class="s"&gt;OS&lt;/span&gt; &lt;span class="s"&gt;X&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="s"&gt;.0.0)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content><category term="angularjs"></category><category term="nginx"></category><category term="apiary"></category><category term="frontend"></category></entry><entry><title>Migrating blog content</title><link href="http://egel.pl/migrating-blog-content.html" rel="alternate"></link><published>2016-03-14T00:00:00+01:00</published><updated>2016-03-14T00:00:00+01:00</updated><author><name>Maciej Sypie≈Ñ</name></author><id>tag:egel.pl,2016-03-14:/migrating-blog-content.html</id><summary type="html">&lt;p&gt;Currently, I am in a phase of migrating my content from legacy Wordpress to
Pelican. To finally complete this, I have to translate all content from Polish
to English to reach further audience.&lt;/p&gt;
&lt;p&gt;Unfortunately, at this moment I suffer for lack of free time. There are many
posts to process ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;Currently, I am in a phase of migrating my content from legacy Wordpress to
Pelican. To finally complete this, I have to translate all content from Polish
to English to reach further audience.&lt;/p&gt;
&lt;p&gt;Unfortunately, at this moment I suffer for lack of free time. There are many
posts to process and it takes a lot of effort to update them for appropriate
level of well written article.&lt;/p&gt;
&lt;p&gt;As soon as I finish transfer of my articles, I will post it here. By this
moment, I would like to invite you take a look on actual a list, you may find
something interesting here.&lt;/p&gt;
&lt;p&gt;Thank you for your indulgence and stay tuned :)&lt;/p&gt;</content><category term="pelican"></category><category term="wordpress"></category></entry><entry><title>Moving from Wordpress to Pelican</title><link href="http://egel.pl/moving-from-wordpress-to-pelican.html" rel="alternate"></link><published>2016-02-25T00:00:00+01:00</published><updated>2016-02-25T00:00:00+01:00</updated><author><name>Maciej Sypie≈Ñ</name></author><id>tag:egel.pl,2016-02-25:/moving-from-wordpress-to-pelican.html</id><summary type="html">&lt;p&gt;I'm talking a bit about "why I migrate my blog from wordpress to
pelican", the static pages web framework.&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have to start with words "I used wordpress for 2 yeas constantly". During
this period of time, several times I had problems with many basic stuff like
uploading and managing images, insert some code snippets (like simple &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; or
&lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; elements), constantly updating framework core, but is not the point.&lt;/p&gt;
&lt;h2&gt;Objective of frameworks&lt;/h2&gt;
&lt;p&gt;IMHO Wordpress is great for PR guys, not for programmers/hackers. PR guys
usually wants to quickly upload news with few sample photos, and they use for it
some &lt;a href="https://en.wikipedia.org/wiki/WYSIWYG"&gt;WYSIWYG&lt;/a&gt; HTML editors like &lt;a href="https://www.tinymce.com/"&gt;TinyMCE&lt;/a&gt;
or &lt;a href="http://ckeditor.com/"&gt;CKEditor&lt;/a&gt;. This editors can be really "smart" and do
amazing job - saving text with HTML conventions, but after some time you will
realize that this kind of making content may not suites you, your idea of
writing, which was in my case.&lt;/p&gt;
&lt;p&gt;I hope I would not say lie to you that programmers, web admins or hackers really
loved Markdown syntax - I loved it. It has a very clean and simple syntax, which
can allows you to focus on making some content and do not concern anything else
(your content will always have the same generated HTML code).  Markdown power is
especially visible for blogs and basic documentation (like simple README files)
where you can mainly focus on content with some basic graphics which illustrate
the whole content.&lt;/p&gt;
&lt;p&gt;In time I realize that kind of magic what those WYSYWIG live editors are
making is not for me, not for my profession - programmer. But here not
profession is important, but the care about the code you are writing, and that
is why programmers and hackers find in those web pages generators a true ally.&lt;/p&gt;
&lt;h2&gt;Finding the single point of truth&lt;/h2&gt;
&lt;p&gt;After while I take a look around market and instantly remembered that is
something like static pages generators. After few minutes, I just surfing among
some rankings that gather some basic data about many frameworks like this one
&lt;a href="https://www.staticgen.com/"&gt;https://www.staticgen.com/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are many of them, and most popular at the moment of choosing one was:
Jekyll, Gitbook, Octopress, Hexo or Hugo, then was the Pelican.&lt;/p&gt;
&lt;p&gt;Why pelican? You will probably as... Hmmm, the answer is simple, because I
really like Python language.&lt;/p&gt;
&lt;p&gt;I will not favoring any of those frameworks, because it point less and actually
depends on user preferences and language taste, then just start writing in it :)&lt;/p&gt;
&lt;h2&gt;Pros and cons of migration&lt;/h2&gt;
&lt;p&gt;As an advantage of migration to static webpages generators I can point:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Writing directly through your SSH connection.&lt;/li&gt;
&lt;li&gt;Writing posts extremely fluent in Vim or Emacs - I realize that is not an
      advantage for all ;)&lt;/li&gt;
&lt;li&gt;Improve performance of displaying your webpage (non database framework is
      faster then static web generator)&lt;/li&gt;
&lt;li&gt;Improve content visibility by adding many useful plugins (cloud tags,
      code syntax highlighting, and many more)&lt;/li&gt;
&lt;li&gt;Host it anywhere&lt;/li&gt;
&lt;li&gt;It likes to be &lt;a href="https://git-scm.com/"&gt;git&lt;/a&gt;-ed ;)&lt;/li&gt;
&lt;li&gt;Making articles in 3 types of text syntax (&lt;code&gt;.rst&lt;/code&gt;, &lt;code&gt;.md&lt;/code&gt; or &lt;code&gt;.adoc&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Articles written in markdown can be easy to migrated almost any type of text
      processor like LaTeX or Word/Writer.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the other side, disadvantages can be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Face the problem of fast and clean migrating HTML content to reStructuredText, Markdown, or
      AsciiDoc&lt;/li&gt;
&lt;li&gt;Change your habits of directly web editing content into CMS&lt;/li&gt;
&lt;li&gt;Generate content after changes (there are some easy techniques which
      constantly watch the content for any changes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;It is worth it?&lt;/h2&gt;
&lt;p&gt;If you want to just write blog or blog-like page in easy to write syntax (like
markdown) I definitely say YES, it is worth the time.&lt;/p&gt;
&lt;p&gt;But if you expect whole next level of writing articles like you do in CMS, turn
around and go back to your stuff, you will waste your time implement it.&lt;/p&gt;</content><category term="wordpress"></category><category term="pelican"></category></entry></feed>