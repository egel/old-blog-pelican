<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>The Egel's Blog - install</title><link href="http://egel.pl/" rel="alternate"></link><link href="http://egel.pl/feeds/tag/install.atom.xml" rel="self"></link><id>http://egel.pl/</id><updated>2016-10-10T00:00:00+02:00</updated><entry><title>How to install Vim from the source files</title><link href="http://egel.pl/how-to-install-vim-from-the-source-files.html" rel="alternate"></link><published>2016-10-10T00:00:00+02:00</published><updated>2016-10-10T00:00:00+02:00</updated><author><name>Maciej Sypień</name></author><id>tag:egel.pl,2016-10-10:/how-to-install-vim-from-the-source-files.html</id><summary type="html">&lt;p&gt;I will show you how to compile and install vim from source files.
You will see how simple it can be.&lt;/p&gt;</summary><content type="html">&lt;p&gt;You may wonder why to install vim from source files if there are precompiled, ready to install packages available in your package managers. Yeah that is true, but there are also few "however".&lt;/p&gt;
&lt;p&gt;If you compile and install from the source, the program is then the best suited to your system its software and also for the hardware. Moreover you can also use the latest versions, especially those not avaiable in the package managers.&lt;/p&gt;
&lt;p&gt;There are also some light and dark side of doing it from the source, but for vim I think is the best possible way to have blazing fast text editor.&lt;/p&gt;
&lt;h3&gt;Before you start&lt;/h3&gt;
&lt;p&gt;We need to check some related libraries and languages that vim or vim's plugins may require to work properly. So we check them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lua + LuaJIT&lt;/li&gt;
&lt;li&gt;Ruby&lt;/li&gt;
&lt;li&gt;Perl&lt;/li&gt;
&lt;li&gt;Python v2 &amp;amp; v3&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The results of checking I present below, because I think that it might be helpful for many beginners as I was once ;)&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ lua -v
Lua &lt;span class="m"&gt;5&lt;/span&gt;.2.3  Copyright &lt;span class="o"&gt;(&lt;/span&gt;C&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;1994&lt;/span&gt;-2013 Lua.org, PUC-Rio
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ luajit -v
LuaJIT &lt;span class="m"&gt;2&lt;/span&gt;.0.2 -- Copyright &lt;span class="o"&gt;(&lt;/span&gt;C&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2005&lt;/span&gt;-2013 Mike Pall. http://luajit.org/
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ruby -v
ruby &lt;span class="m"&gt;2&lt;/span&gt;.2.1p85 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2015&lt;/span&gt;-02-26 revision &lt;span class="m"&gt;49769&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;x86_64-linux&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ perl -v

This is perl &lt;span class="m"&gt;5&lt;/span&gt;, version &lt;span class="m"&gt;18&lt;/span&gt;, subversion &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;v5.18.2&lt;span class="o"&gt;)&lt;/span&gt; built &lt;span class="k"&gt;for&lt;/span&gt; x86_64-linux-gnu-thread-multi
&lt;span class="o"&gt;(&lt;/span&gt;with &lt;span class="m"&gt;44&lt;/span&gt; registered patches, see perl -V &lt;span class="k"&gt;for&lt;/span&gt; more detail&lt;span class="o"&gt;)&lt;/span&gt;

Copyright &lt;span class="m"&gt;1987&lt;/span&gt;-2013, Larry Wall

Perl may be copied only under the terms of either the Artistic License or the
GNU General Public License, which may be found in the Perl &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="nb"&gt;source&lt;/span&gt; kit.

Complete documentation &lt;span class="k"&gt;for&lt;/span&gt; Perl, including FAQ lists, should be found on
this system using &lt;span class="s2"&gt;&amp;quot;man perl&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;perldoc perl&amp;quot;&lt;/span&gt;.  If you have access to the
Internet, point your browser at http://www.perl.org/, the Perl Home Page.
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ which python
/usr/bin/python
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ which python3
/usr/bin/python3
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h3&gt;Installation for linux&lt;/h3&gt;
&lt;p&gt;The installation is simple. Probably the scariest thing might be vim's configuration flags, but it is also very clear.&lt;/p&gt;
&lt;p&gt;The flags are very simple. The hardest to understand might be python &lt;code&gt;--with-python-config-dir&lt;/code&gt; because the config directory might be different depends on system.&lt;/p&gt;
&lt;p&gt;To check it run:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ find /usr/lib/python2.7 -type d -name &lt;span class="s2"&gt;&amp;quot;config*&amp;quot;&lt;/span&gt;
/usr/lib/python2.7/dist-packages/configobj-4.7.2.egg-info
/usr/lib/python2.7/dist-packages/configglue-1.1.2.egg-info
/usr/lib/python2.7/dist-packages/configglue
/usr/lib/python2.7/config-x86_64-linux-gnu
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;I my case they are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;for python 2: &lt;code&gt;/usr/lib/python2.7/config-x86_64-linux-gnu&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;for python 3: &lt;code&gt;/usr/lib/python3.4/config-3.4m-x86_64-linux-gnu&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The downloaded version also matters, so if downloaded version is v7.4 you write &lt;code&gt;vim74&lt;/code&gt; or v8.0 you put &lt;code&gt;vim80&lt;/code&gt;. You need to correct this path with relevant &lt;code&gt;VIMRUNTIMEDIR&lt;/code&gt; configuration variable.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you do not know which is the latest version (tag) from vim's github repository, you can check it by downloading repo, enter into it and run &lt;code&gt;$ git describe --abbrev=0 --tags&lt;/code&gt; which checks the latest tag.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /tmp
git clone https://github.com/vim/vim
&lt;span class="nb"&gt;cd&lt;/span&gt; vim/
./configure --with-features&lt;span class="o"&gt;=&lt;/span&gt;huge &lt;span class="se"&gt;\&lt;/span&gt;
            --enable-gui&lt;span class="o"&gt;=&lt;/span&gt;auto &lt;span class="se"&gt;\&lt;/span&gt;
            --enable-cscope &lt;span class="se"&gt;\&lt;/span&gt;
            --enable-largefile &lt;span class="se"&gt;\&lt;/span&gt;
            --enable-pythoninterp &lt;span class="se"&gt;\&lt;/span&gt;
            --with-python-config-dir&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib/python2.7/config-x86_64-linux-gnu &lt;span class="se"&gt;\&lt;/span&gt;
            --enable-python3interp &lt;span class="se"&gt;\&lt;/span&gt;
            --with-python3-config-dir&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib/python3.4/config-3.4m-x86_64-linux-gnu &lt;span class="se"&gt;\&lt;/span&gt;
            --enable-perlinterp &lt;span class="se"&gt;\&lt;/span&gt;
            --enable-rubyinterp &lt;span class="se"&gt;\&lt;/span&gt;
            --enable-luainterp &lt;span class="se"&gt;\&lt;/span&gt;
            --with-luajit &lt;span class="se"&gt;\&lt;/span&gt;
            --enable-fail-if-missing &lt;span class="se"&gt;\&lt;/span&gt;
            --prefix&lt;span class="o"&gt;=&lt;/span&gt;/usr &lt;span class="se"&gt;\&lt;/span&gt;
            --with-compiledby&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Maciej Sypień &amp;lt;maciejsypien@gmail.com&amp;gt;&amp;quot;&lt;/span&gt;
make &lt;span class="nv"&gt;VIMRUNTIMEDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/vim/vim80
sudo make install
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;If all goes well, now you can check if it is available for you. You will also see that the &lt;code&gt;+&lt;/code&gt; is near all ours relates libs/languages.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vim --version
VIM - Vi IMproved &lt;span class="m"&gt;8&lt;/span&gt;.0 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2016&lt;/span&gt; Sep &lt;span class="m"&gt;12&lt;/span&gt;, compiled Sep &lt;span class="m"&gt;17&lt;/span&gt; &lt;span class="m"&gt;2016&lt;/span&gt; &lt;span class="m"&gt;19&lt;/span&gt;:09:12&lt;span class="o"&gt;)&lt;/span&gt;
Included patches: &lt;span class="m"&gt;1&lt;/span&gt;-5
Compiled by root@forge
Huge version with GTK2 GUI.  Features included &lt;span class="o"&gt;(&lt;/span&gt;+&lt;span class="o"&gt;)&lt;/span&gt; or not &lt;span class="o"&gt;(&lt;/span&gt;-&lt;span class="o"&gt;)&lt;/span&gt;:
+acl             +file_in_path    +mouse_sgr       +tag_old_static
+arabic          +find_in_path    -mouse_sysmouse  -tag_any_white
+autocmd         +float           +mouse_urxvt     -tcl
+balloon_eval    +folding         +mouse_xterm     +termguicolors
+browse          -footer          +multi_byte      +terminfo
++builtin_terms  +fork&lt;span class="o"&gt;()&lt;/span&gt;          +multi_lang      +termresponse
+byte_offset     +gettext         -mzscheme        +textobjects
+channel         -hangul_input    +netbeans_intg   +timers
+cindent         +iconv           +num64           +title
+clientserver    +insert_expand   +packages        +toolbar
+clipboard       +job             +path_extra      +user_commands
+cmdline_compl   +jumplist        +perl            +vertsplit
+cmdline_hist    +keymap          +persistent_undo +virtualedit
+cmdline_info    +lambda          +postscript      +visual
+comments        +langmap         +printer         +visualextra
+conceal         +libcall         +profile         +viminfo
+cryptv          +linebreak       +python/dyn      +vreplace
+cscope          +lispindent      +python3/dyn     +wildignore
+cursorbind      +listcmds        +quickfix        +wildmenu
+cursorshape     +localmap        +reltime         +windows
+dialog_con_gui  +lua             +rightleft       +writebackup
+diff            +menu            +ruby            +X11
+digraphs        +mksession       +scrollbind      -xfontset
+dnd             +modify_fname    +signs           +xim
-ebcdic          +mouse           +smartindent     +xpm
+emacs_tags      +mouseshape      +startuptime     +xsmp_interact
+eval            +mouse_dec       +statusline      +xterm_clipboard
+ex_extra        -mouse_gpm       -sun_workshop    -xterm_save
+extra_search    -mouse_jsbterm   +syntax
+farsi           +mouse_netterm   +tag_binary
   system vimrc file: &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$VIM&lt;/span&gt;&lt;span class="s2"&gt;/vimrc&amp;quot;&lt;/span&gt;
     user vimrc file: &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/.vimrc&amp;quot;&lt;/span&gt;
 2nd user vimrc file: &lt;span class="s2"&gt;&amp;quot;~/.vim/vimrc&amp;quot;&lt;/span&gt;
      user exrc file: &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/.exrc&amp;quot;&lt;/span&gt;
  system gvimrc file: &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$VIM&lt;/span&gt;&lt;span class="s2"&gt;/gvimrc&amp;quot;&lt;/span&gt;
    user gvimrc file: &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/.gvimrc&amp;quot;&lt;/span&gt;
2nd user gvimrc file: &lt;span class="s2"&gt;&amp;quot;~/.vim/gvimrc&amp;quot;&lt;/span&gt;
       defaults file: &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$VIMRUNTIME&lt;/span&gt;&lt;span class="s2"&gt;/defaults.vim&amp;quot;&lt;/span&gt;
    system menu file: &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$VIMRUNTIME&lt;/span&gt;&lt;span class="s2"&gt;/menu.vim&amp;quot;&lt;/span&gt;
  fall-back &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;$VIM&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;/usr/share/vim&amp;quot;&lt;/span&gt;
Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H -DFEAT_GUI_GTK  -pthread -I/usr/include/gtk-2.0 -I/usr/lib/x86_64-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/freetype2 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/libpng12 -I/usr/include/harfbuzz     -g -O2 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
Linking: gcc   -L. -fstack-protector -rdynamic -Wl,-export-dynamic -Wl,-E   -L/usr/local/lib -Wl,--as-needed -o vim   -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfontconfig -lgobject-2.0 -lglib-2.0 -lfreetype   -lSM -lICE -lXpm -lXt -lX11 -lXdmcp -lSM -lICE  -lm -ltinfo -lnsl  -lselinux   -ldl  -L/usr/lib/x86_64-linux-gnu -lluajit-5.1 -Wl,-E  -fstack-protector -L/usr/local/lib  -L/usr/lib/perl/5.18/CORE -lperl -ldl -lm -lpthread -lcrypt    -Wl,-R/home/maciej/.rvm/rubies/ruby-2.2.1/lib -L/home/maciej/.rvm/rubies/ruby-2.2.1/lib -lruby -lpthread -ldl -lcrypt -lm  -L/home/maciej/.rvm/rubies/ruby-2.2.1/lib
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Awesome, now you are ready to discover the vim! Good luck hacker! See you on the grid ;)&lt;/p&gt;</content><category term="text-editor"></category><category term="latex"></category><category term="install"></category></entry><entry><title>Install archived app into Linux</title><link href="http://egel.pl/install-archived-app-into-linux.html" rel="alternate"></link><published>2014-08-16T12:31:00+02:00</published><updated>2015-10-01T19:30:00+02:00</updated><author><name>Maciej Sypień</name></author><id>tag:egel.pl,2014-08-16:/install-archived-app-into-linux.html</id><summary type="html">&lt;!--
&lt;div class="intro-article-image-sm" markdown="1"&gt;
  ![Logo of Sublime Text 3]({filename}/images/linux_logo_pinguin.jpg)
&lt;/div&gt;
--&gt;

&lt;p&gt;This should be obvious task for average Linux user, but there are hundreds of
thousands methods how to install program from archive file like &lt;code&gt;.tar&lt;/code&gt;,
&lt;code&gt;.tar.gz&lt;/code&gt;, &lt;code&gt;.zip&lt;/code&gt; or any other.&lt;/p&gt;
&lt;p&gt;When I use Debian based Linux distros, I most often install external software
into &lt;code&gt;/opt&lt;/code&gt; directory. This is because …&lt;/p&gt;</summary><content type="html">&lt;!--
&lt;div class="intro-article-image-sm" markdown="1"&gt;
  ![Logo of Sublime Text 3]({filename}/images/linux_logo_pinguin.jpg)
&lt;/div&gt;
--&gt;

&lt;p&gt;This should be obvious task for average Linux user, but there are hundreds of
thousands methods how to install program from archive file like &lt;code&gt;.tar&lt;/code&gt;,
&lt;code&gt;.tar.gz&lt;/code&gt;, &lt;code&gt;.zip&lt;/code&gt; or any other.&lt;/p&gt;
&lt;p&gt;When I use Debian based Linux distros, I most often install external software
into &lt;code&gt;/opt&lt;/code&gt; directory. This is because I rarely install program for single user
and that is most evident location for multi users programs.&lt;/p&gt;
&lt;h3&gt;Example scenario&lt;/h3&gt;
&lt;p&gt;As an example app I will install simple &lt;strong&gt;SQLiteStudio&lt;/strong&gt; to edit SQLite
database files, you can probably use any other you want to install.&lt;/p&gt;
&lt;p&gt;To do so:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Extract archive &lt;code&gt;/opt&lt;/code&gt; directory where are usually stored external apps.&lt;/li&gt;
&lt;li&gt;Download the icon of program (format &lt;code&gt;png&lt;/code&gt; or &lt;code&gt;xpa&lt;/code&gt;) and save into
    &lt;code&gt;/usr/share/pixmaps/&lt;/code&gt; directory to with &lt;code&gt;chmod 644&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Create new file for ex: &lt;code&gt;sqlitestudio.desktop&lt;/code&gt; into &lt;code&gt;/usr/share/application&lt;/code&gt;
    and paste below entry:&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;Desktop Entry&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;SqliteStudio
&lt;span class="nv"&gt;Comment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;SQLite editor
&lt;span class="nv"&gt;Exec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/SQLiteStudio/sqlitestudio
&lt;span class="nv"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/pixmaps/sqlite.png
&lt;span class="nv"&gt;Terminal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="nv"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Application
&lt;span class="nv"&gt;Encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;UTF-8
&lt;span class="nv"&gt;Categories&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Network&lt;span class="p"&gt;;&lt;/span&gt;Application&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;Path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If there are any problems with file permissions directly into
program's directory, that is pretty much it. Good job!&lt;/p&gt;
&lt;p&gt;You have your external program installed correctly for multiple users and
probably any graphical interface you have should read it properly.&lt;/p&gt;</content><category term="linux"></category><category term="install"></category></entry></feed>