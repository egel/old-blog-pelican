<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>The Egel's Blog - frontend</title><link href="http://egel.pl/" rel="alternate"></link><link href="http://egel.pl/feeds/tag/frontend.atom.xml" rel="self"></link><id>http://egel.pl/</id><updated>2016-11-05T00:00:00+01:00</updated><entry><title>Install and configure dnsmasq on Linux</title><link href="http://egel.pl/install-and-configure-dnsmasq-on-linux.html" rel="alternate"></link><published>2016-11-05T00:00:00+01:00</published><updated>2016-11-05T00:00:00+01:00</updated><author><name>Maciej Sypień</name></author><id>tag:egel.pl,2016-11-05:/install-and-configure-dnsmasq-on-linux.html</id><summary type="html">&lt;p&gt;In few small steps I will try to show you how to setup your own instance of dnsmasq.&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you previously using &lt;code&gt;/etc/hosts&lt;/code&gt; to manage your local domains and not heard about more effective way of managing local domains, you should try the old and good &lt;code&gt;dnsmasq&lt;/code&gt; program to improve your development workflow.&lt;/p&gt;
&lt;h3&gt;Installation process&lt;/h3&gt;
&lt;p&gt;Using the &lt;code&gt;apt-get&lt;/code&gt; manager we will install core program.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install dnsmasq
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h3&gt;Configuring dnsmasq as DNS server&lt;/h3&gt;
&lt;p&gt;Then when we have program installed, now we can get strict to the configuration. But before we will create backup file.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo cp /etc/dnsmasq.conf /etc/dnsmasq.conf.backup
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;In the example we want to use &lt;code&gt;loc&lt;/code&gt; domain as our local domain (I not use &lt;code&gt;.dev&lt;/code&gt; anymore due to now it is into standard global domains) and into &lt;code&gt;/etc/dnsmasq.conf&lt;/code&gt; file we add:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;listen-address=127.0.0.1
address=/loc/127.0.0.1
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;That is pretty much it. Next restart the service by:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo service dnsmasq restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Final check if everything is ok and you are good to go.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ping wp.loc
PING wp.loc (127.0.0.1) 56(84) bytes of data.
64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=0.010 ms
64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=0.016 ms
64 bytes from localhost (127.0.0.1): icmp_seq=3 ttl=64 time=0.036 ms
64 bytes from localhost (127.0.0.1): icmp_seq=4 ttl=64 time=0.038 ms
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content><category term="linux"></category><category term="frontend"></category></entry><entry><title>Nginx configuration for AngularJS cloud project with Apiary</title><link href="http://egel.pl/nginx-configuration-for-angularjs-cloud-project-with-apiary.html" rel="alternate"></link><published>2016-04-13T12:44:00+02:00</published><updated>2016-04-13T12:44:00+02:00</updated><author><name>Maciej Sypień</name></author><id>tag:egel.pl,2016-04-13:/nginx-configuration-for-angularjs-cloud-project-with-apiary.html</id><summary type="html">&lt;!--
&lt;div class="intro-article-image-sm" markdown="1"&gt;
  ![Logo of Sublime Text 3]({filename}/images/nginx_logo.png)
&lt;/div&gt;
--&gt;

&lt;p&gt;Recently I have been working on some cloud project with my coworkers. We used
 &lt;a href="https://angularjs.org/"&gt;AngularJS&lt;/a&gt; as frontend framework and &lt;a href="https://apiary.io/"&gt;Apiary&lt;/a&gt; as a backend bridge for RESTful API, while the real backend was being built.&lt;/p&gt;
&lt;p&gt;The main gole for proper nginx configuration was to serve &lt;code&gt;*.example.dev&lt;/code&gt;
domains, but with some …&lt;/p&gt;</summary><content type="html">&lt;!--
&lt;div class="intro-article-image-sm" markdown="1"&gt;
  ![Logo of Sublime Text 3]({filename}/images/nginx_logo.png)
&lt;/div&gt;
--&gt;

&lt;p&gt;Recently I have been working on some cloud project with my coworkers. We used
 &lt;a href="https://angularjs.org/"&gt;AngularJS&lt;/a&gt; as frontend framework and &lt;a href="https://apiary.io/"&gt;Apiary&lt;/a&gt; as a backend bridge for RESTful API, while the real backend was being built.&lt;/p&gt;
&lt;p&gt;The main gole for proper nginx configuration was to serve &lt;code&gt;*.example.dev&lt;/code&gt;
domains, but with some exceptions (restrictions) for subdomains:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;www&lt;/code&gt; subdomain as a legacy restriction&lt;/li&gt;
&lt;li&gt;&lt;code&gt;api&lt;/code&gt; subdomain reserved for final REST API&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tests&lt;/code&gt; this subdomain (for my purpose only) provides easy URL to code coverage with
    unit tests&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;I use &lt;code&gt;dev&lt;/code&gt; domain only for on my local machine only. Feel free to change it
on whatever name you like.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While building frontend application I have made some basic nginx configuration
and it looks like this snippet presented at the bottom.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It might be important for Readers. We have decided to split application for two separate projects, due to AngularJS have problems with support of multiple subdomains. Finally one of our application serve subdomains &lt;code&gt;&amp;lt;variable&amp;gt;.example.dev&lt;/code&gt; and other serve bacis domain &lt;code&gt;example.dev&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This configuration provides 5 servers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First one is for frontend application, which may support organizations with
    some exceptions for &lt;code&gt;api&lt;/code&gt;, &lt;code&gt;tests&lt;/code&gt; and &lt;code&gt;www&lt;/code&gt; (ex.: &lt;code&gt;companyname.example.dev&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Second for legacy domain &lt;code&gt;www&lt;/code&gt; redirect.&lt;/li&gt;
&lt;li&gt;The third is for frontend aplication which may support only basic domain (ex.: &lt;code&gt;example.dev&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Next one is for REST backend domain redirect provided by apiary.&lt;/li&gt;
&lt;li&gt;The Last one provides easy access for auto generated code coverage for
    fronted app.&lt;/li&gt;
&lt;/ul&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;^(?:(?!www)(?!api)(?!tests))(.*)\.example\.dev$;&lt;/span&gt;
  &lt;span class="s"&gt;access_log&lt;/span&gt; &lt;span class="s"&gt;/tmp/subdomains.example.dev.log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;error_log&lt;/span&gt;  &lt;span class="s"&gt;/tmp/subdomains.example.dev.error.log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;client_max_body_size&lt;/span&gt; &lt;span class="s"&gt;100M&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Access-Control-Allow-Origin&amp;#39;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;root&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/ABSOLUTE_PATH_TO_WORKING_DIR/example-subdomain-frontend/build&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="nv"&gt;$uri/&lt;/span&gt; &lt;span class="s"&gt;/index.html&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;www.example.dev&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;301&lt;/span&gt; &lt;span class="nv"&gt;$scheme://exampe.dev$request_uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;example.dev&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;access_log&lt;/span&gt; &lt;span class="s"&gt;/tmp/example.dev.log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;error_log&lt;/span&gt;  &lt;span class="s"&gt;/tmp/example.dev.error.log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;client_max_body_size&lt;/span&gt; &lt;span class="s"&gt;100M&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Access-Control-Allow-Origin&amp;#39;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;root&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/ABSOLUTE_PATH_TO_WORKING_DIR/example-domain-frontend/build&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="nv"&gt;$uri/&lt;/span&gt; &lt;span class="s"&gt;/index.html&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;api.example.dev&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;access_log&lt;/span&gt; &lt;span class="s"&gt;/tmp/api.example.dev.log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;error_log&lt;/span&gt;  &lt;span class="s"&gt;/tmp/api.example.dev.error.log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Access-Control-Allow-Credentials&amp;#39;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Access-Control-Allow-Methods&amp;#39;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;GET,&lt;/span&gt; &lt;span class="s"&gt;POST,&lt;/span&gt; &lt;span class="s"&gt;PUT,&lt;/span&gt; &lt;span class="s"&gt;DELETE,&lt;/span&gt; &lt;span class="s"&gt;OPTIONS&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Access-Control-Allow-Headers&amp;#39;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;proxy_pass&lt;/span&gt; &lt;span class="s"&gt;http://private-ABCDE-example.apiary-mock.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;tests.example.dev&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;client_max_body_size&lt;/span&gt; &lt;span class="s"&gt;100M&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;root&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/ABSOLUTE_PATH_TO_WORKING_DIR/example-subdomain-frontend/tests/test-coverage/PhantomJS&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="s"&gt;.1.1&lt;/span&gt; &lt;span class="s"&gt;(Mac&lt;/span&gt; &lt;span class="s"&gt;OS&lt;/span&gt; &lt;span class="s"&gt;X&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="s"&gt;.0.0)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content><category term="angularjs"></category><category term="nginx"></category><category term="apiary"></category><category term="frontend"></category></entry></feed>